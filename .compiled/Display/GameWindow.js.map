{"version":3,"sources":["../../src/Display/GameWindow.jsx"],"names":["GameWindow","observer","props","handleKeyPress","_","throttle","state","leading","newWorld","game","inputHandler","handleNewGameWizardClick","fullScreenPane","handleFullScreenDisplayClick","effectsPane","Component"],"mappings":"k3BAAA,8B;AACA;AACA;AACA,6C;AACA,uC;AACA,oD;AACA,gD;AACA,4D;AACA,sD;AACA,0D;;AAEA,0C;;AAEMA,U,OADLC,mB;AAEC,sBAAYC,KAAZ,EAAmB;AACXA,SADW;;;;;;;;AASnBC,kBATmB,GASFC,EAAEC,QAAF,CAAWC,gBAAMH,cAAjB,EAAiC,GAAjC,EAAsC;AACrDI,eAAS,IAD4C,EAAtC,CATE,CAEjB,MAAKD,KAAL,GAAaA,eAAb,CAFiB,aAGlB,C,0FAEmB,CAClB,KAAKA,KAAL,CAAWE,QAAX,GACD,C;;AAKQ;AACP;AACE,sCAAC,mBAAD,QAAW;AACT,qDAAK,WAAU,YAAf,EAA4B,UAAS,GAArC,EAAyC,WAAW,OAAKF,KAAL,CAAWH,cAA/D;;AAEE,8CAAC,uBAAD;AACM,uBAAKG,KAAL,CAAWG,IADjB;;AAGE,gCAAc,OAAKH,KAAL,CAAWI,YAH3B;AAIE,+BAAa,OAAKJ,KAAL,CAAWK,wBAJ1B,IAFF;;AAQE,8CAAC,wBAAD;AACM,uBAAKL,KAAL,CAAWG,IAAX,CAAgBG,cADtB;AAEE,+BAAa,OAAKN,KAAL,CAAWO,4BAF1B,IARF;;;AAaE,8CAAC,qBAAD,EAAiB,OAAKP,KAAL,CAAWG,IAAX,CAAgBK,WAAjC,CAbF;AAcE,8CAAC,oBAAD;AACM,uBAAKR,KADX;AAEE,gCAAc,EAAEE,UAAU,OAAKF,KAAL,CAAWE,QAAvB,EAFhB,IAdF;;AAkBE,8CAAC,kBAAD,eAAc,OAAKF,KAAnB,IAA0B,cAAc,EAAEE,UAAU,OAAKF,KAAL,CAAWE,QAAvB,EAAxC,IAlBF,CADS,GAAX,CADF;;;;AAwBD,K,yBAtCsBO,gB;;;AAyCVf,U","file":"GameWindow.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { observer, Observer } from \"mobx-react\";\r\nimport { observable, computed } from \"mobx\";\r\nimport Grid from \"./Structures/Grid.jsx\";\r\nimport PropTypes from \"prop-types\";\r\nimport ActionPane from \"./Panes/ActionPane.jsx\";\r\nimport InfoPane from \"./Panes/InfoPane.jsx\";\r\nimport FullScreenPane from \"./Panes/FullScreenPane.jsx\";\r\nimport EffectsPane from \"./Panes/EffectsPane.jsx\";\r\nimport NewGameWizard from \"./Panes/NewGameWizard.jsx\";\r\n\r\nimport state from '../store/state.js'\r\n@observer\r\nclass GameWindow extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = state\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.state.newWorld();\r\n  }\r\n\r\n  handleKeyPress = _.throttle(state.handleKeyPress, 100, {\r\n    leading: true\r\n  });\r\n  render() {\r\n    return (\r\n      <Observer>{() =>\r\n        <div className=\"GameWindow\" tabIndex=\"0\" onKeyDown={this.state.handleKeyPress}>\r\n\r\n          <NewGameWizard\r\n            {...this.state.game\r\n            }\r\n            inputHandler={this.state.inputHandler}\r\n            handleClick={this.state.handleNewGameWizardClick}\r\n          />\r\n          <FullScreenPane\r\n            {...this.state.game.fullScreenPane}\r\n            handleClick={this.state.handleFullScreenDisplayClick}\r\n          />\r\n\r\n          <EffectsPane {...this.state.game.effectsPane} />\r\n          <ActionPane\r\n            {...this.state}\r\n            gameControls={{ newWorld: this.state.newWorld }}\r\n          />\r\n          <InfoPane {...this.state} gameControls={{ newWorld: this.state.newWorld }} />\r\n        </div>}\r\n      </Observer>\r\n    );\r\n  }\r\n\r\n}\r\nexport default GameWindow;\r\n"]}