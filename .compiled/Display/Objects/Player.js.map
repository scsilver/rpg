{"version":3,"sources":["../../../src/Display/Objects/Player.jsx"],"names":["degToRad","Math","PI","deg","Player","props","player","world","cells","options","orientationRad","position","orientationDeg","top","side","y","left","x","minWidth","maxWidth","minHeight","maxHeight","transform","cos","sin","textAlign","verticalAlign","emoji","Component"],"mappings":"4oBAAA,8B;AACA,kD;AACA,IAAMA,WAAW,SAAXA,QAAW,cAAOC,KAAKC,EAAL,GAAUC,GAAV,GAAgB,GAAvB,EAAjB,C;AACqBC,M;AACV;AACuC,WAAKC,KAD5C,CACCC,MADD,UACCA,MADD,uBACSC,KADT,CACkBC,KADlB,gBACkBA,KADlB,CACyBC,OADzB,gBACyBA,OADzB;AAEP,UAAMC,iBAAiBV,SAASM,OAAOK,QAAP,CAAgBC,cAAzB,CAAvB;AACA;AACE;AACE,mBAAO;AACLD,wBAAU,UADL;AAELE,mBAAQ,KAAKJ,QAAQK,IAAb,IAAqBR,OAAOK,QAAP,CAAgBI,CAAhB,GAAoBN,QAAQK,IAAjD,CAAR,OAFK;AAGLE,oBAAS,KAAKP,QAAQK,IAAb,GAAoBR,OAAOK,QAAP,CAAgBM,CAA7C,OAHK;AAILC,wBAAa,KAAKT,QAAQK,IAA1B,OAJK;AAKLK,wBAAa,KAAKV,QAAQK,IAA1B,OALK;AAMLM,yBAAc,KAAKX,QAAQK,IAA3B,OANK;AAOLO,yBAAc,KAAKZ,QAAQK,IAA3B,OAPK;AAQLQ,qCAAqBrB,KAAKsB,GAAL,CAASb,cAAT,CAArB,UAAkDT,KAAKuB,GAAL;AAChDd,4BADgD,CAAlD;AAEMT,mBAAKuB,GAAL,CAASd,cAAT,CAFN,UAEmC,CAACT,KAAKsB,GAAL,CAASb,cAAT,CAFpC,UARK;AAWLe,yBAAW,QAXN;AAYLC,6BAAe,QAZV,EADT;;;AAgBGpB,iBAAOqB,KAhBV,CADF;;;AAoBD,K,qBAxBiCC,gB,oBAAfxB,M","file":"Player.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport colors from \"../../../styling/theme.js\";\r\nconst degToRad = deg => Math.PI * deg / 180;\r\nexport default class Player extends Component {\r\n  render() {\r\n    const { player, world: { cells, options } } = this.props;\r\n    const orientationRad = degToRad(player.position.orientationDeg);\r\n    return (\r\n      <div\r\n        style={{\r\n          position: \"relative\",\r\n          top: `${70 / options.side * (player.position.y - options.side)}vh`,\r\n          left: `${70 / options.side * player.position.x}vh`,\r\n          minWidth: `${70 / options.side}vh`,\r\n          maxWidth: `${70 / options.side}vh`,\r\n          minHeight: `${70 / options.side}vh`,\r\n          maxHeight: `${70 / options.side}vh`,\r\n          transform: `matrix(${Math.cos(orientationRad)}, ${Math.sin(\r\n            orientationRad\r\n          )}, ${Math.sin(orientationRad)}, ${-Math.cos(orientationRad)},0,0)`,\r\n          textAlign: \"center\",\r\n          verticalAlign: \"center\"\r\n        }}\r\n      >\r\n        {player.emoji}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]}