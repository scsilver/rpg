{"version":3,"sources":["../../../src/Display/Panes/InfoPane.jsx"],"names":["resourceList","iron","ore","food","material","diamond","copper","apple","strawberry","corn","wood","sand","fish","water","InfoPane","props","game","player","world","selectedCell","backgroundImage","width","height","backgroundColor","colors","tertiary","color","quinary","fontFamily","weight","padding","boxSizing","display","flexDirection","overflow","position","bottom","flex","Component","defaultProps"],"mappings":"8pBAAA,8B;AACA,kD;AACA,uD;AACA,yD;AACA,IAAMA,eAAe;AACnBC,QAAM,EAAEC,KAAK,IAAP,EAAaC,MAAM,KAAnB,EAA0BC,UAAU,KAApC,EADa;AAEnBC,WAAS,EAAEH,KAAK,IAAP,EAAaC,MAAM,KAAnB,EAA0BC,UAAU,KAApC,EAFU;AAGnBE,UAAQ,EAAEJ,KAAK,IAAP,EAAaC,MAAM,KAAnB,EAA0BC,UAAU,KAApC,EAHW;AAInBG,SAAO,EAAEL,KAAK,KAAP,EAAcC,MAAM,IAApB,EAA0BC,UAAU,KAApC,EAJY;AAKnBI,cAAY,EAAEN,KAAK,KAAP,EAAcC,MAAM,IAApB,EAA0BC,UAAU,KAApC,EALO;AAMnBK,QAAM,EAAEP,KAAK,KAAP,EAAcC,MAAM,IAApB,EAA0BC,UAAU,KAApC,EANa;AAOnBM,QAAM,EAAER,KAAK,KAAP,EAAcC,MAAM,KAApB,EAA2BC,UAAU,IAArC,EAPa;AAQnBO,QAAM,EAAET,KAAK,KAAP,EAAcC,MAAM,KAApB,EAA2BC,UAAU,IAArC,EARa;AASnBQ,QAAM,EAAEV,KAAK,KAAP,EAAcC,MAAM,IAApB,EAA0BC,UAAU,KAApC,EATa;AAUnBS,SAAO,EAAEX,KAAK,KAAP,EAAcC,MAAM,IAApB,EAA0BC,UAAU,KAApC,EAVY,EAArB,C;;AAYqBU,Q;;;;AAIV;AAC2C,WAAKC,KADhD,sBACCC,IADD,CACSC,MADT,eACSA,MADT,CACiBC,KADjB,eACiBA,KADjB,CAC0BC,YAD1B,UAC0BA,YAD1B;AAEP;AACE;AACE,mBAAO;AACLC;AACA,sHAFK;AAGLC,qBAAO,MAHF;AAILC,sBAAQ,KAJH;AAKLC,+BAAiBC,gBAAOC,QALnB;AAMLC,qBAAOF,gBAAOG,OANT;AAOLC,0BAAY,cAPP;AAQLC,sBAAQ,GARH;AASLC,uBAAS,MATJ;AAULC,yBAAW,YAVN;AAWLC,uBAAS,aAXJ;AAYLC,6BAAe,KAZV;AAaLC,wBAAU,MAbL;AAcLC,wBAAU,OAdL;AAeLC,sBAAQ,CAfH,EADT;;;AAmBE,iDAAK,OAAO,EAAEC,MAAM,CAAR,EAAZ;AACE,0CAAC,sBAAD,EAAkBpB,MAAlB,CADF,CAnBF;;AAsBE,iDAAK,OAAO,EAAEoB,MAAM,CAAR,EAAZ;AACE,0CAAC,qBAAD,EAAiBnB,KAAjB,CADF,CAtBF,CADF;;;;AA4BD,K,uBAlCmCoB,gB,UAC7BC,Y,GAAe,EACpBtB,QAAQ,EADY,E,2BADHH,Q;;;;AAsCrB;AACE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgFD","file":"InfoPane.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport colors from \"../../../styling/theme.js\";\r\nimport WorldStatus from './Status/WorldStatus.jsx'\r\nimport PlayerStatus from './Status/PlayerStatus.jsx'\r\nconst resourceList = {\r\n  iron: { ore: true, food: false, material: false },\r\n  diamond: { ore: true, food: false, material: false },\r\n  copper: { ore: true, food: false, material: false },\r\n  apple: { ore: false, food: true, material: false },\r\n  strawberry: { ore: false, food: true, material: false },\r\n  corn: { ore: false, food: true, material: false },\r\n  wood: { ore: false, food: false, material: true },\r\n  sand: { ore: false, food: false, material: true },\r\n  fish: { ore: false, food: true, material: false },\r\n  water: { ore: false, food: true, material: false }\r\n};\r\nexport default class InfoPane extends Component {\r\n  static defaultProps = {\r\n    player: {}\r\n  };\r\n  render() {\r\n    const { game: { player, world }, selectedCell } = this.props;\r\n    return (\r\n      <div\r\n        style={{\r\n          backgroundImage:\r\n          \"url(https://images.template.net/wp-content/uploads/2017/01/07045821/White-Parchment-Paper-Texture.jpg)\",\r\n          width: \"100%\",\r\n          height: \"20%\",\r\n          backgroundColor: colors.tertiary,\r\n          color: colors.quinary,\r\n          fontFamily: \"Josefin Slab\",\r\n          weight: 500,\r\n          padding: \"10px\",\r\n          boxSizing: \"border-box\",\r\n          display: \"inline-flex\",\r\n          flexDirection: \"row\",\r\n          overflow: \"wrap\",\r\n          position: \"fixed\",\r\n          bottom: 0\r\n        }}\r\n      >\r\n        <div style={{ flex: 3 }}>\r\n          <PlayerStatus {...player} />\r\n        </div>\r\n        <div style={{ flex: 1 }}>\r\n          <WorldStatus {...world} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n{\r\n  /*<div\r\n          style={{\r\n            flex: 2,\r\n            flexDirection: \"row\"\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              flex: 1,\r\n              flexDirection: \"column\",\r\n              display: \"inline-flex\",\r\n              padding: \"10px\"\r\n            }}\r\n          >\r\n            <h3>Status</h3>\r\n            <h5>\r\n              Health\r\n              <div\r\n                style={{\r\n                  backgroundColor: \"red\",\r\n                  width: `${player.health}%`,\r\n                  height: \"20px\"\r\n                }}\r\n              />{\" \"}\r\n            </h5>\r\n            <div>\r\n              Hunger\r\n              <div\r\n                style={{\r\n                  backgroundColor: \"green\",\r\n                  width: `${player.hunger}%`,\r\n                  height: \"20px\"\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div\r\n            style={{\r\n              flex: 1,\r\n              flexDirection: \"column\",\r\n              display: \"inline-flex\",\r\n              padding: \"10px\"\r\n            }}\r\n          >\r\n            <h5 style={{ margin: \"0\" }}>Skills</h5>\r\n            <div>Agility {player.agility}</div>\r\n            <div>Attack {player.attack}</div>\r\n            <div>Defense {player.defense}</div>\r\n          </div>\r\n\r\n          <div\r\n            style={{\r\n              flex: 1,\r\n              flexDirection: \"column\",\r\n              display: \"inline-flex\",\r\n              padding: \"10px\"\r\n            }}\r\n          >\r\n            <h5 style={{ margin: \"0\" }}>Inventory</h5>\r\n            {_.uniq(player.inventory).map((item, i, inventory) => {\r\n              return (\r\n                <div>\r\n                  {player.inventory.filter(itemA => item == itemA).length} lbs\r\n                  of {item}\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n\r\n        <div>\r\n          {Object.keys(this.props.gameControls).map(key => (\r\n            <button onClick={this.props.gameControls[key]}>{key}</button>\r\n          ))}\r\n        </div>\r\n        <div style={{ flex: 1 }}>\r\n          {player.mentalState.interaction}\r\n          {player.mentalState.environment}\r\n        </div>\r\n        <div style={{ flex: 1 }}>Time: {time}</div>*/\r\n}\r\n"]}