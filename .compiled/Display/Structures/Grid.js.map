{"version":3,"sources":["../../../src/Display/Structures/Grid.jsx"],"names":["Grid","handleMouseMoveOver","_","debounce","event","cell","mouse","x","clientX","y","clientY","setState","tooltip","handleMouseOutCell","state","props","game","world","cells","options","cellCount","amount","sideCellCount","side","maxWidth","minHeight","map","e","persist","Component","defaultProps"],"mappings":"q5BAAA,8B;AACA,uC;AACA,gC;AACA,kC;AACA,+C;;AAEqBA,I;AACnB,kBAAc;;;;;;;AAOdC,uBAPc,GAOQC,iBAAEC,QAAF,CAAW,UAACC,KAAD,EAAQC,IAAR,EAAiB;AAChD,UAAMC,QAAQ,EAAEC,GAAGH,MAAMI,OAAX,EAAoBC,GAAGL,MAAMM,OAA7B,EAAd;AACA,YAAKC,QAAL,CAAc,EAAEL,YAAF,EAASM,SAAS,IAAlB,EAAwBP,MAAMA,IAA9B,EAAd;AACD,KAHqB,EAGnB,GAHmB,CAPR;;AAYdQ,sBAZc,GAYO,qBAAK,MAAKF,QAAL,CAAc,EAAEC,SAAS,KAAX,EAAd,CAAL,EAZP,CAEZ,MAAKE,KAAL,GAAa,EAAb,CAFY,aAGb,C;;AAWQ;;;;;;;AAOH,WAAKC,KAPF,CAELH,OAFK,UAELA,OAFK,CAGLN,KAHK,UAGLA,KAHK,CAILU,IAJK,UAILA,IAJK,CAKGC,KALH,UAKLD,IALK,CAKGC,KALH,4BAMLD,IANK,CAMGC,KANH,CAMYC,KANZ,qBAMYA,KANZ,CAMmBC,OANnB,qBAMmBA,OANnB;AAQP,UAAMC,YAAYD,QAAQE,MAA1B;AACA,UAAMC,gBAAgBH,QAAQI,IAA9B;AACA;AACE;AACE,uBAAU,MADZ;AAEE,mBAAO;AACLC,8BADK;AAELC,+BAFK,EAFT;;;AAOGP,gBAAMQ,GAAN,CAAU,gBAAQ;AACjB;AACE,4CAAC,cAAD;AACE,iCAAiB,yBAACC,CAAD,EAAItB,IAAJ,EAAa;AAC5BsB,oBAAEC,OAAF;AACA,yBAAO,OAAK3B,mBAAL,CAAyB0B,CAAzB,EAA4BtB,IAA5B,CAAP;AACD,iBAJH;AAKE,gCAAgB,OAAKQ,kBALvB;AAME,uBAAO,OAAKE,KAAL,CAAWT,KANpB;AAOE,sBAAMD,IAPR;AAQE,yBAASc,OARX,GADF;;;AAYD,WAbA,CAPH;AAqBGP,qBAAW,8BAAC,OAAD,eAAaN,KAAb,IAAoB,MAAMD,IAA1B,IArBd;AAsBE,wCAAC,gBAAD,eAAYW,IAAZ,IAAkB,SAASG,OAA3B,IAtBF,CADF;;;AA0BD,K,mBAnD+BU,gB,UAKzBC,Y,GAAe,EACpBb,OAAO,EAAEC,OAAO,EAAT,EADa,E,2BALHlB,I","file":"Grid.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport _ from \"lodash\";\r\nimport Cell from \"./Cell.jsx\";\r\nimport Player from \"../Objects/Player.jsx\";\r\n\r\nexport default class Grid extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {};\r\n  }\r\n  static defaultProps = {\r\n    world: { cells: [] }\r\n  };\r\n  handleMouseMoveOver = _.debounce((event, cell) => {\r\n    const mouse = { x: event.clientX, y: event.clientY };\r\n    this.setState({ mouse, tooltip: true, cell: cell });\r\n  }, 500);\r\n\r\n  handleMouseOutCell = e => this.setState({ tooltip: false });\r\n\r\n  render() {\r\n    const {\r\n      tooltip,\r\n      mouse,\r\n      game,\r\n      game: { world },\r\n      game: { world: { cells, options } }\r\n    } = this.props;\r\n    const cellCount = options.amount;\r\n    const sideCellCount = options.side;\r\n    return (\r\n      <div\r\n        className=\"grid\"\r\n        style={{\r\n          maxWidth: `70vh`,\r\n          minHeight: `70vh`\r\n        }}\r\n      >\r\n        {cells.map(cell => {\r\n          return (\r\n            <Cell\r\n              handleMouseMove={(e, cell) => {\r\n                e.persist();\r\n                return this.handleMouseMoveOver(e, cell);\r\n              }}\r\n              handleMouseOut={this.handleMouseOutCell}\r\n              mouse={this.props.mouse}\r\n              cell={cell}\r\n              options={options}\r\n            />\r\n          );\r\n        })}\r\n        {tooltip && <Tooltip {...mouse} cell={cell} />}\r\n        <Player {...game} options={options} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]}